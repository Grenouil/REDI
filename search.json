[{"path":"https://grenouil.github.io/REDI/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 REDI authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://grenouil.github.io/REDI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexia Grenouillat. Author, maintainer. Arthur Leroy. Author.","code":""},{"path":"https://grenouil.github.io/REDI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moussa, Issa, Leroy, Arthur, Sauliere, Guillaume, Schipman, Julien, Toussaint, Jean-Francois, Sedeaud, Adrien (2019). “Robust Exponential Decreasing Index (REDI): adaptive robust method computing cumulated workload.” BMJ Open Sport Exercise Medicine, 5(1), e000573. https://bmjopensem.bmj.com/content/5/1/e000573.abstract.","code":"@Article{,   title = {Robust Exponential Decreasing Index (REDI): adaptive and robust method for computing cumulated workload},   author = {{Moussa} and {Issa} and {Leroy} and {Arthur} and {Sauliere} and {Guillaume} and {Schipman} and {Julien} and {Toussaint} and {Jean-Francois} and {Sedeaud} and {Adrien}},   journal = {BMJ Open Sport and Exercise Medicine},   volume = {5},   number = {1},   pages = {e000573},   year = {2019},   url = {https://bmjopensem.bmj.com/content/5/1/e000573.abstract}, }"},{"path":"https://grenouil.github.io/REDI/index.html","id":"redi-","dir":"","previous_headings":"","what":"Robust Exponential Decreasing Index","title":"Robust Exponential Decreasing Index","text":"REDI package implements Robust Exponential Decreasing Index (REDI). represents measure cumulated workload, robust missing data provides control decreasing influence workload time. REDI provides various functions format data, compute REDI visualise results simple convenient way. Issa Moussa, Arthur Leroy et al. (2019): Robust Exponential Decreasing Index (REDI): adaptive robust method computing cumulated workload. BMJ Open Sport & Exercise Medicine, https://bmjopensem.bmj.com/content/bmjosem/5/1/e000573.full.pdf.","code":""},{"path":"https://grenouil.github.io/REDI/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Robust Exponential Decreasing Index","text":"can install development version REDI GitHub :","code":"#install.packages(\"devtools\") devtools::install_github(\"Grenouil/REDI\")"},{"path":"https://grenouil.github.io/REDI/index.html","id":"redi-in-a-nutshell","dir":"","previous_headings":"","what":"REDI in a nutshell","title":"Robust Exponential Decreasing Index","text":"basic example simulate dataset adequate format, compute REDI values time display results.","code":"library(REDI) set.seed(42) ## Generate a synthetic dataset with the correct format data = simu_db()  data #> # A tibble: 366 × 2 #>    Input      Output #>    <date>      <dbl> #>  1 2022-01-01   54.3 #>  2 2022-01-02   NA   #>  3 2022-01-03   51.1 #>  4 2022-01-04   NA   #>  5 2022-01-05   NA   #>  6 2022-01-06   49.7 #>  7 2022-01-07   54.8 #>  8 2022-01-08   NA   #>  9 2022-01-09   NA   #> 10 2022-01-10   NA   #> # … with 356 more rows  ## Compute REDI over all observations for different Lambda values and display results res = redi(data) res #> # A tibble: 1,098 × 4 #>    Input      Output  REDI Lambda #>    <date>      <dbl> <dbl>  <dbl> #>  1 2023-01-01   NA    49.2   0.05 #>  2 2022-12-31   49.5  49.2   0.05 #>  3 2022-12-30   NA    49.2   0.05 #>  4 2022-12-29   NA    49.2   0.05 #>  5 2022-12-28   NA    49.2   0.05 #>  6 2022-12-27   47.3  49.2   0.05 #>  7 2022-12-26   45.0  49.3   0.05 #>  8 2022-12-25   49.1  49.7   0.05 #>  9 2022-12-24   52.6  49.7   0.05 #> 10 2022-12-23   NA    49.5   0.05 #> # … with 1,088 more rows"},{"path":"https://grenouil.github.io/REDI/index.html","id":"detailed-workflow","dir":"","previous_headings":"","what":"Detailed workflow","title":"Robust Exponential Decreasing Index","text":"advanced use package, quick step--step guide.","code":""},{"path":"https://grenouil.github.io/REDI/index.html","id":"data-simulation","dir":"","previous_headings":"Detailed workflow","what":"Data simulation","title":"Robust Exponential Decreasing Index","text":"order test different features package, simu_db() function provided handy way generate synthetic data correct format subsequent REDI computations. displayed , dataset processed REDI provide 2 columns: one corresponding Input values (e.g. time) another Output values (e.g. workload).","code":"set.seed(42) ## Generate a synthetic dataset, containing dates (Inputs) from '2022-01-01' to '2023-01-01' and observations (Outputs) following a Gaussian distribution (mean = 50, var = 10), with 50% of missing values. simu_data <- simu_db(start_date = '2022-01-01',     end_date = '2023-01-01',     by = 'day',     output_distrib = 'Gaussian',     ratio_missing = 0.5,     mean = 50,     var = 10)  simu_data #> # A tibble: 366 × 2 #>    Input      Output #>    <date>      <dbl> #>  1 2022-01-01   54.3 #>  2 2022-01-02   NA   #>  3 2022-01-03   51.1 #>  4 2022-01-04   NA   #>  5 2022-01-05   NA   #>  6 2022-01-06   49.7 #>  7 2022-01-07   54.8 #>  8 2022-01-08   NA   #>  9 2022-01-09   NA   #> 10 2022-01-10   NA   #> # … with 356 more rows"},{"path":"https://grenouil.github.io/REDI/index.html","id":"convert-a-dataset-to-the-correct-format-with-format_data","dir":"","previous_headings":"Detailed workflow","what":"Convert a dataset to the correct format with format_data()","title":"Robust Exponential Decreasing Index","text":"However, real-life dataset generally correct format compute REDI directly. Therefore, format_data() function designed help process identifying columns corresponding Input (e.g date) Output (e.g. workload) variables. Input column defined correct Date type. function automatically identify missing values observations, considering argument time increment (instance ‘day’, default, day two observed dates considered missing). Finally, Output values duplicated Input values can summarised according summarise_duplicate argument.","code":"## Create a dummy real-life dataset  raw_db <- data.frame(   'Var1' = 1:100,    'Var2' = rnorm(n = 100, mean = 50, sd = 10),    'Var3' = c(     as.Date(\"2022/1/1\"),      seq(from = as.Date(\"2022/1/3\"), by = \"day\", length.out = 99)     )   )  head(raw_db) #>   Var1     Var2       Var3 #> 1    1 58.84844 2022-01-01 #> 2    2 51.63431 2022-01-03 #> 3    3 41.39630 2022-01-04 #> 4    4 59.74555 2022-01-05 #> 5    5 43.81340 2022-01-06 #> 6    6 44.72518 2022-01-07  ## Convert the dataset to the correct format (adding the missing data point on 2022-01-02)  db <- format_data(     data = raw_db,     input = 'Var3',     output = 'Var2',     by = 'day',     format = '%Y%m%d'     )  db #> # A tibble: 101 × 2 #>    Input      Output #>    <date>      <dbl> #>  1 2022-01-01   58.8 #>  2 2022-01-02   NA   #>  3 2022-01-03   51.6 #>  4 2022-01-04   41.4 #>  5 2022-01-05   59.7 #>  6 2022-01-06   43.8 #>  7 2022-01-07   44.7 #>  8 2022-01-08   32.4 #>  9 2022-01-09   45.0 #> 10 2022-01-10   46.8 #> # … with 91 more rows"},{"path":"https://grenouil.github.io/REDI/index.html","id":"computation-of-redi-with-compute_redi","dir":"","previous_headings":"Detailed workflow","what":"Computation of REDI with compute_redi()","title":"Robust Exponential Decreasing Index","text":"compute single REDI value, simply use compute_redi() function. correspond REDI value recent observed Input dataset, using data past. Feel free adapt λ coefficient, controlling exponential decay weights time, depending context.","code":"## Compute REDI at the current date (2022-04-11 in this example) compute_redi(db, coef = 0.05) #> [1] 49.85942  max(db$Input) #> [1] \"2022-04-11\""},{"path":"https://grenouil.github.io/REDI/index.html","id":"computation-of-multiple-redi-values-over-time-with-loop_redi","dir":"","previous_headings":"Detailed workflow","what":"Computation of multiple REDI values over time with loop_redi()","title":"Robust Exponential Decreasing Index","text":"sequentially compute REDI Input values dataset speed-vectorised operations, one can use loop_redi() function.","code":"## Apply loop_redi() to compute REDI for all dates in the dataset  db_redi <- loop_redi(data = db, coef = 0.5)  db_redi #> # A tibble: 101 × 4 #>    Input      Output  REDI Lambda #>    <date>      <dbl> <dbl>  <dbl> #>  1 2022-04-11   50.1  51.4    0.5 #>  2 2022-04-10   63.9  52.3    0.5 #>  3 2022-04-09   40.9  44.9    0.5 #>  4 2022-04-08   48.3  47.4    0.5 #>  5 2022-04-07   48.7  46.8    0.5 #>  6 2022-04-06   37.9  45.6    0.5 #>  7 2022-04-05   54.4  50.6    0.5 #>  8 2022-04-04   36.9  48.2    0.5 #>  9 2022-04-03   55.0  55.5    0.5 #> 10 2022-04-02   63.0  55.8    0.5 #> # … with 91 more rows"},{"path":"https://grenouil.github.io/REDI/index.html","id":"display-results-with-plot_redi","dir":"","previous_headings":"Detailed workflow","what":"Display results with plot_redi()","title":"Robust Exponential Decreasing Index","text":"plot_redi() function proposed display results, provides several options personalise graphs.  One can customise graphs : changing name axis replacing default values x_axis y_axis; masking original data black points setting plot_data FALSE.","code":"## Display results as time series of REDI values plot_redi(redi = db_redi,           x_axis = 'Date',           y_axis = 'Workload',           plot_data = TRUE) #> Warning: Removed 1 rows containing missing values (`geom_point()`)."},{"path":"https://grenouil.github.io/REDI/index.html","id":"full-workflow-with-the-wrapper-function-redi","dir":"","previous_headings":"Detailed workflow","what":"Full workflow with the wrapper function redi()","title":"Robust Exponential Decreasing Index","text":"presented nutshell example, previous steps (formatting, computations, plotting) wrapped redi() function. addition arguments previous functions, also possible provide vector coef argument display results different λ values.","code":"## Apply redi() on db and provide a vector of coefficients. db_full_redi <- redi(data = db, coef = c(0.1, 0.2, 0.3), plot = TRUE) db_full_redi #> # A tibble: 303 × 4 #>    Input      Output  REDI Lambda #>    <date>      <dbl> <dbl>  <dbl> #>  1 2022-04-11   50.1  50.2    0.1 #>  2 2022-04-10   63.9  50.2    0.1 #>  3 2022-04-09   40.9  48.7    0.1 #>  4 2022-04-08   48.3  49.5    0.1 #>  5 2022-04-07   48.7  49.7    0.1 #>  6 2022-04-06   37.9  49.8    0.1 #>  7 2022-04-05   54.4  51.0    0.1 #>  8 2022-04-04   36.9  50.7    0.1 #>  9 2022-04-03   55.0  52.1    0.1 #> 10 2022-04-02   63.0  51.8    0.1 #> # … with 293 more rows"},{"path":"https://grenouil.github.io/REDI/reference/REDI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute REDI for all observed and missing input values in a dataset — redi","title":"Compute REDI for all observed and missing input values in a dataset — redi","text":"Wrapper function converts dataset adequate format, compute values REDI Input values, display generic plot results return tibble containing data corresponding REDI values.","code":""},{"path":"https://grenouil.github.io/REDI/reference/REDI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute REDI for all observed and missing input values in a dataset — redi","text":"","code":"redi(   data,   coef = c(0.05, 0.1, 0.5),   input = 1,   output = 2,   plot = TRUE,   by = \"day\",   format = \"%Y%m%d\",   summary_duplicate = mean )"},{"path":"https://grenouil.github.io/REDI/reference/REDI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute REDI for all observed and missing input values in a dataset — redi","text":"data tibble data frame, containing Input column used reference observations (e.g. time longitudinal data), Output column specifying observed values interest (workload). coef number vector, containing values lambda coefficient used REDI computations, controlling decay exponential weights. Default c(0.05, 0.1, 0.5). input character number, indicating name index Input column (time). output character number, indicating name index Output column (workload). plot boolean, indicating whether results displayed. TRUE. number character string, indicating reference time period two observations. Possible values 'day', 'week', 'month', 'year', arbitrary number. See documentation 'seq()' additional information necessary. Default 'day'. format character string, indicating date format input. Please read lubridate::as_date(). Default '%Y%m%d'. summary_duplicate function, used summarise Output values duplicated Input values. Default mean.","code":""},{"path":"https://grenouil.github.io/REDI/reference/REDI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute REDI for all observed and missing input values in a dataset — redi","text":"tibble containing 4 columns : Input (without duplicates), Output, Lambda REDI, corresponds vector returned loop_REDI() function.","code":""},{"path":"https://grenouil.github.io/REDI/reference/REDI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute REDI for all observed and missing input values in a dataset — redi","text":"","code":"data <- simu_db() redi <- redi(data)"},{"path":"https://grenouil.github.io/REDI/reference/compute_redi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute REDI for a specific input — compute_redi","title":"Compute REDI for a specific input — compute_redi","text":"Compute REDI specific input","code":""},{"path":"https://grenouil.github.io/REDI/reference/compute_redi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute REDI for a specific input — compute_redi","text":"","code":"compute_redi(data, coef = 0.1)"},{"path":"https://grenouil.github.io/REDI/reference/compute_redi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute REDI for a specific input — compute_redi","text":"data tibble data frame, containing Input column (Date format) Output column. simple vector workload values, pre-sorted chronological order, can also provided. coef number corresponding lambda coefficient, controlling decay exponential weights.","code":""},{"path":"https://grenouil.github.io/REDI/reference/compute_redi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute REDI for a specific input — compute_redi","text":"number, corresponding REDI value last Input time, computed whole period.","code":""},{"path":"https://grenouil.github.io/REDI/reference/compute_redi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute REDI for a specific input — compute_redi","text":"","code":"data <- simu_db() compute_redi(data = data, coef = 0.1) #> [1] 50.38167"},{"path":"https://grenouil.github.io/REDI/reference/format_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the dataset to the syntax of REDI functions — format_data","title":"Format the dataset to the syntax of REDI functions — format_data","text":"Format dataset syntax REDI functions","code":""},{"path":"https://grenouil.github.io/REDI/reference/format_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the dataset to the syntax of REDI functions — format_data","text":"","code":"format_data(   data,   input = 1,   output = 2,   by = \"day\",   format = \"%Y%m%d\",   summary_duplicate = mean )"},{"path":"https://grenouil.github.io/REDI/reference/format_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the dataset to the syntax of REDI functions — format_data","text":"data tibble data frame containing one column indicating time another indicating quantity want compute REDI. input character number, indicating whether name index input column (time). output character number, indicating whether name index output column (workload). number character string, indicating reference time period two observations. Possible values 'day', 'week', 'month', 'year', arbitrary number. See documentation 'seq()' additional information necessary. Default 'day'. format character string, indicating date format input. Please read lubridate::as_date(). Default '%Y%m%d'. summary_duplicate function, used summarise Output values duplicated Input values. Default mean.","code":""},{"path":"https://grenouil.github.io/REDI/reference/format_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the dataset to the syntax of REDI functions — format_data","text":"tibble Input Output columns explicit missing values observations.","code":""},{"path":"https://grenouil.github.io/REDI/reference/format_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the dataset to the syntax of REDI functions — format_data","text":"","code":"TRUE #> [1] TRUE"},{"path":"https://grenouil.github.io/REDI/reference/loop_redi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the evolution of REDI over successive inputs — loop_redi","title":"Compute the evolution of REDI over successive inputs — loop_redi","text":"Compute evolution REDI successive inputs","code":""},{"path":"https://grenouil.github.io/REDI/reference/loop_redi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the evolution of REDI over successive inputs — loop_redi","text":"","code":"loop_redi(data, coef = 0.1)"},{"path":"https://grenouil.github.io/REDI/reference/loop_redi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the evolution of REDI over successive inputs — loop_redi","text":"data tibble data frame, containing Input column (Date format) Output column. simple vector workload values, pre-sorted chronological order can also provided. coef number corresponding lambda coefficient, controlling decay exponential weights. Default 0.1.","code":""},{"path":"https://grenouil.github.io/REDI/reference/loop_redi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the evolution of REDI over successive inputs — loop_redi","text":"tibble similar data, containing additional REDI column computed successive input values.","code":""},{"path":"https://grenouil.github.io/REDI/reference/loop_redi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the evolution of REDI over successive inputs — loop_redi","text":"","code":"data <- simu_db() loop_redi(data = data, coef = 0.1) #> # A tibble: 366 × 4 #>    Input      Output  REDI Lambda #>    <date>      <dbl> <dbl>  <dbl> #>  1 2023-01-01   NA    50.5    0.1 #>  2 2022-12-31   52.5  50.5    0.1 #>  3 2022-12-30   50.8  50.1    0.1 #>  4 2022-12-29   49.2  50.0    0.1 #>  5 2022-12-28   NA    50.2    0.1 #>  6 2022-12-27   NA    50.2    0.1 #>  7 2022-12-26   55.6  50.2    0.1 #>  8 2022-12-25   NA    49.1    0.1 #>  9 2022-12-24   NA    49.1    0.1 #> 10 2022-12-23   47.6  49.1    0.1 #> # ℹ 356 more rows"},{"path":"https://grenouil.github.io/REDI/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://grenouil.github.io/REDI/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://grenouil.github.io/REDI/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://grenouil.github.io/REDI/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://grenouil.github.io/REDI/reference/plot_redi.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the evolution of REDI over time and data points. — plot_redi","title":"Display the evolution of REDI over time and data points. — plot_redi","text":"Display evolution REDI time data points.","code":""},{"path":"https://grenouil.github.io/REDI/reference/plot_redi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the evolution of REDI over time and data points. — plot_redi","text":"","code":"plot_redi(   redi,   plot_data = TRUE,   x_axis = \"Input\",   y_axis = \"Output\",   alpha = 0.2,   size = 1 )"},{"path":"https://grenouil.github.io/REDI/reference/plot_redi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the evolution of REDI over time and data points. — plot_redi","text":"redi tibble data frame containing 4 mandatory columns : Input, Output, REDI Lambda. One can use redi() function get tibble right format. plot_data boolean, indicating whether original data displayed. Default TRUE. x_axis character string, label x-axis. Default 'Input'. y_axis character string, label y-axis. Default 'Output'. alpha number, 0 1, controlling transparency data points. Default 0.2. size number, controlling size data points. Default 1.","code":""},{"path":"https://grenouil.github.io/REDI/reference/plot_redi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the evolution of REDI over time and data points. — plot_redi","text":"Graph evolution REDI time, possibly different values Lambda, along original data points.","code":""},{"path":"https://grenouil.github.io/REDI/reference/plot_redi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the evolution of REDI over time and data points. — plot_redi","text":"","code":"TRUE #> [1] TRUE"},{"path":"https://grenouil.github.io/REDI/reference/simu_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a synthetic dataset tailored for REDI computations — simu_db","title":"Generate a synthetic dataset tailored for REDI computations — simu_db","text":"Simulate complete training dataset, may representative various applications. Several flexible arguments allow adjustment range observed days, distribution mean Output values, well ratio missing data.","code":""},{"path":"https://grenouil.github.io/REDI/reference/simu_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a synthetic dataset tailored for REDI computations — simu_db","text":"","code":"simu_db(   start_date = \"2022-01-01\",   end_date = \"2023-01-01\",   by = \"day\",   output_distrib = \"Gaussian\",   ratio_missing = 0.5,   mean = 50,   var = 10,   range_unif = c(0, 100) )"},{"path":"https://grenouil.github.io/REDI/reference/simu_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a synthetic dataset tailored for REDI computations — simu_db","text":"start_date date, indicating starting time observations. Default '2022-01-01'. end_date date, indicating ending time observations. Default '2023-01-01'. number character string, indicating reference time time period two observations. Possible values 'day', 'week', 'month', 'year', arbitrary number. See documentation 'seq()' additional information necessary. Default 'day'. output_distrib character string, indicating distribution Output values. Possible values: 'Gaussian' (default), 'Uniform'. ratio_missing number, 0 1, indicating ratio missing values dataset. Default 0.5. mean number, indicating mean value Gaussian distribution. Default 50. var number, indicating variance Gaussian distribution. Default 10. range_unif vector, indicating range values Uniform distribution. Default c(0,100).","code":""},{"path":"https://grenouil.github.io/REDI/reference/simu_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a synthetic dataset tailored for REDI computations — simu_db","text":"full dataset synthetic data.","code":""},{"path":"https://grenouil.github.io/REDI/reference/simu_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a synthetic dataset tailored for REDI computations — simu_db","text":"","code":"## Generate a dataset with Gaussian measurements data = simu_db(output_distrib = 'Gaussian')  ## Generate a dataset with Uniform measurements and 30% of missing data. data = simu_db(output_distrib = 'Uniform', ratio_missing = 0.3)"},{"path":"https://grenouil.github.io/REDI/news/index.html","id":"redi-100","dir":"Changelog","previous_headings":"","what":"REDI 1.0.0","title":"REDI 1.0.0","text":"Initial release","code":""}]
